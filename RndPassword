using System;
using System.Linq;
using System.Security.Cryptography;

namespace RandomPasswordGenerator
{
    class Program
    {
        static void Main(string[] args)
        {
            var password = GeneratePassword();
            Console.WriteLine(password);
        }

        static string GeneratePassword()
        {
            const int passwordLength = 8;
            const string validCharacters = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
            const string validSpecialCharacters = @"!#$%&'()*+,-./:;<=>?@[\]^_`{|}~";

            using (RNGCryptoServiceProvider rng = new RNGCryptoServiceProvider())
            {
                byte[] uintBuffer = new byte[sizeof(uint)];

                char[] password = new char[passwordLength];
                int characterCount = validCharacters.Length;
                int specialCharacterCount = validSpecialCharacters.Length;

                for (int i = 0; i < passwordLength; i++)
                {
                    rng.GetBytes(uintBuffer);
                    uint num = BitConverter.ToUInt32(uintBuffer, 0);
                    password[i] = validCharacters[(int)(num % characterCount)];
                }

                int specialIndex = (int)(BitConverter.ToUInt32(uintBuffer, 0) % specialCharacterCount);
                password[specialIndex] = validSpecialCharacters[specialIndex];

                return new string(password);
            }
        }
    }
}
